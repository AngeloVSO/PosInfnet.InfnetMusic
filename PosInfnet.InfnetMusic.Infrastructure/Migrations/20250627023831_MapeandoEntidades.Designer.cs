// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PosInfnet.InfnetMusic.Infrastructure.Context;

#nullable disable

namespace PosInfnet.InfnetMusic.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250627023831_MapeandoEntidades")]
    partial class MapeandoEntidades
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BandaConta", b =>
                {
                    b.Property<string>("BandasFavoritasId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContasBandasFavoritasId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BandasFavoritasId", "ContasBandasFavoritasId");

                    b.HasIndex("ContasBandasFavoritasId");

                    b.ToTable("ContasBandasFavoritas", (string)null);
                });

            modelBuilder.Entity("ContaMusica", b =>
                {
                    b.Property<string>("ContasMusicasFavoritasId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MusicasFavoritasId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ContasMusicasFavoritasId", "MusicasFavoritasId");

                    b.HasIndex("MusicasFavoritasId");

                    b.ToTable("ContasMusicasFavoritas", (string)null);
                });

            modelBuilder.Entity("PosInfnet.InfnetMusic.Domain.BandaAggregate.Banda", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Bandas");
                });

            modelBuilder.Entity("PosInfnet.InfnetMusic.Domain.BandaAggregate.ValueObjects.Musica", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Musicas");
                });

            modelBuilder.Entity("PosInfnet.InfnetMusic.Domain.ContaAggregate.Assinatura", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Plano")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContaId")
                        .IsUnique();

                    b.ToTable("Assinaturas");
                });

            modelBuilder.Entity("PosInfnet.InfnetMusic.Domain.ContaAggregate.Conta", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("PosInfnet.InfnetMusic.Domain.TransacaoAggregate.Transacao", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comerciante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("BandaConta", b =>
                {
                    b.HasOne("PosInfnet.InfnetMusic.Domain.BandaAggregate.Banda", null)
                        .WithMany()
                        .HasForeignKey("BandasFavoritasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PosInfnet.InfnetMusic.Domain.ContaAggregate.Conta", null)
                        .WithMany()
                        .HasForeignKey("ContasBandasFavoritasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ContaMusica", b =>
                {
                    b.HasOne("PosInfnet.InfnetMusic.Domain.ContaAggregate.Conta", null)
                        .WithMany()
                        .HasForeignKey("ContasMusicasFavoritasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PosInfnet.InfnetMusic.Domain.BandaAggregate.ValueObjects.Musica", null)
                        .WithMany()
                        .HasForeignKey("MusicasFavoritasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PosInfnet.InfnetMusic.Domain.BandaAggregate.ValueObjects.Musica", b =>
                {
                    b.HasOne("PosInfnet.InfnetMusic.Domain.BandaAggregate.Banda", "Banda")
                        .WithMany("Musicas")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banda");
                });

            modelBuilder.Entity("PosInfnet.InfnetMusic.Domain.ContaAggregate.Assinatura", b =>
                {
                    b.HasOne("PosInfnet.InfnetMusic.Domain.ContaAggregate.Conta", "Conta")
                        .WithOne("Assinatura")
                        .HasForeignKey("PosInfnet.InfnetMusic.Domain.ContaAggregate.Assinatura", "ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("PosInfnet.InfnetMusic.Domain.TransacaoAggregate.Transacao", b =>
                {
                    b.HasOne("PosInfnet.InfnetMusic.Domain.ContaAggregate.Conta", "Conta")
                        .WithMany("Transacoes")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("PosInfnet.InfnetMusic.Domain.BandaAggregate.Banda", b =>
                {
                    b.Navigation("Musicas");
                });

            modelBuilder.Entity("PosInfnet.InfnetMusic.Domain.ContaAggregate.Conta", b =>
                {
                    b.Navigation("Assinatura");

                    b.Navigation("Transacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
